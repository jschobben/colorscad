find_package(PkgConfig)
if(PkgConfig_FOUND)
  pkg_check_modules(PC_LIB3MF lib3mf)
else()
  message(WARNING "pkgconfig is not installed, unable to check for system version of lib3mf")
endif()

if(PC_LIB3MF_FOUND)
  find_path(LIB3MF_INCLUDE_DIRS
    NAMES lib3mf_implicit.hpp
    PATHS ${PC_LIB3MF_INCLUDE_DIRS}
    PATH_SUFFIXES lib3mf Bindings/Cpp
  )

  find_library(LIB3MF_LIBRARIES
    NAMES ${PC_LIB3MF_LIBRARIES}
    PATHS ${PC_LIB3MF_LIBRARY_DIRS}
  )

  set(LIB3MF_VERSION ${PC_LIB3MF_VERSION})

  include(FindPackageHandleStandardArgs)
  find_package_handle_standard_args(LIB3MF
    FOUND_VAR LIB3MF_FOUND
    REQUIRED_VARS
      LIB3MF_LIBRARIES
      LIB3MF_INCLUDE_DIRS
    VERSION_VAR LIB3MF_VERSION
  )
endif()

if(LIB3MF_FOUND AND NOT TARGET lib3mf)
  add_library(lib3mf UNKNOWN IMPORTED)
  set_target_properties(lib3mf PROPERTIES
    IMPORTED_LOCATION "${LIB3MF_LIBRARIES}"
    INTERFACE_COMPILE_OPTIONS "${PC_LIB3MF_CFLAGS_OTHER}"
    INTERFACE_INCLUDE_DIRECTORIES "${LIB3MF_INCLUDE_DIRS}"
  )
else()
  set(LIB3MF_VERSION 2.2.0)
  set(LIB3MF_TARBALL_HASH 96e85e278fc5474123e3c47237dd42faaf1fdf8e182541a84af7fe84ddd3cbde)

  message("Building LIB3MF ${LIB3MF_VERSION} from source")

  unset(LIB3MF_INCLUDE_DIRS)
  unset(LIB3MF_LIBRARIES)

  FetchContent_Declare(
    lib3mf
    URL https://github.com/3MFConsortium/lib3mf/archive/refs/tags/v${LIB3MF_VERSION}.tar.gz
    URL_HASH SHA256=${LIB3MF_TARBALL_HASH}
    PATCH_COMMAND git apply --ignore-whitespace ${CMAKE_CURRENT_SOURCE_DIR}/patches/lib3mf_fix_lib3mf.pc_path.patch
  )
  # LIB3MF's tests reference submodule dependencies, not included in the tarball
  option(LIB3MF_TESTS OFF)
  # LIB3MF still uses "cmake_minimum_required (VERSION 3.0)", which is unsupported in CMake 4.0
  set(CMAKE_POLICY_VERSION_MINIMUM 3.5)

  FetchContent_MakeAvailable(lib3mf)

  set_target_properties(lib3mf PROPERTIES
    INTERFACE_INCLUDE_DIRECTORIES "${lib3mf_SOURCE_DIR}/Autogenerated/Bindings/Cpp"
  )
endif()
